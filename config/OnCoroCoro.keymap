#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 120

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/rgbled_widget.dtsi>


#include "keycode_japanese.h"

#define DEFAULT 0
#define SYMBOL 1
#define NAVNUM 2
#define FCN 3
#define DEVICE 4
#define MOUSE 5

#define CLICK_L 38
#define CLICK_M 39

&mt {
    flavor = "hold-preferred";
};

&lt {
    flavor = "hold-preferred";
};

&msc {
    delay-ms = <0>;
    trigger-period-ms = <10>; // default:16
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <0>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        device_layer {
            if-layers = <SYMBOL NAVNUM>;
            then-layer = <DEVICE>;
        };
    };

    combos{
        compatible = "zmk,combos";
        combo_rclck {
            timeout-ms = <100>;
            key-positions = <CLICK_L CLICK_M>;
            bindings = <&mkp RCLK>;
        };
    };

    behaviors {
        // Japanese settings
        minus: jp-minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_MINUS>, <&kp JP_UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        semi: jp-semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_SEMI>, <&kp JP_COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sqt: jp-sqt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_SQT>, <&kp JP_DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        minusmod: minus_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&minus>;
        };
        sqtmod: sqt_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sqt>;
        };
        // Hold-Tap
        plt: positional_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <1000>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0>;
        };
        mth: mt-hold-while-undecided {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            hold-while-undecided;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        lth: lt-hold-while-undecided {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            hold-while-undecided;
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
        ltc: lt-with-click_L {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            hold-while-undecided;
            tapping-term-ms = <200>;
            bindings = <&mo>, <&mkp>;
        };
        mtt: mt-tap-preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        pmtc: positional_mod_tap_click_L {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <1000>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <CLICK_L>;
        };
        ltt: lt-tap-preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        // Encoders
        rot_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
            tap-ms = <10>;
        };
        alt_p: alt-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp 0>, <&kp TAB>;
            mods = <(MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LALT)>;
        };
        gui_p: gui-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp 0>, <&kp RIGHT>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
        ag_p: alt-gui-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&gui_p>, <&alt_p>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        arrow_p: arrow-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp DOWN>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        vol_arrow_p: volume-arrow-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&arrow_p>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };
        vol_alt_gui_p: volume-alt-gui-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&vol_arrow_p>, <&ag_p>;
            mods = <(MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        alt_n: alt-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp 0>, <&kp LS(TAB)>;
            mods = <(MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LALT)>;
        };
        gui_n: gui-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp 0>, <&kp LEFT>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
        ag_n: alt-gui-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&gui_n>, <&alt_n>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        arrow_n: arrow-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp UP>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        vol_arrow_n: volume-arrow-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&arrow_n>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };
        vol_alt_gui_n: volume-right-alt-gui-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&vol_arrow_n>, <&ag_n>;
            mods = <(MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        vol_alt_tab: volume-alt-tab {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&vol_alt_gui_n>, <&vol_alt_gui_p>;
            tap-ms = <10>;
        };

    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            display-name = "Default";
            bindings = <
                &lth FCN TAB    &plt FCN Q  &kp W &kp E     &kp R     &kp T                                   &kp Y &kp U &kp I     &kp O   &kp P     &minusmod LALT 0
                &mth LCTRL RET  &kp A       &kp S &kp D     &kp F     &kp G                                   &kp H &kp J &kp K     &kp L   &semi     &sqt
                &mth LSHIFT ESC &kp Z       &kp X &kp C     &kp V     &kp B                                   &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp LGUI
                                                    &lth SYMBOL SPACE &lth NAVNUM BSPC  &mkp LCLK  &mkp MCLK  &mt LALT DEL &mt LSHFT RET
            >;
            sensor-bindings = <&vol_alt_tab>;
        };
        symbol_layer {
            display-name = "Symbol";
            bindings = <
                &kp JP_TILDE &kp JP_EXCL  &kp JP_AT &kp JP_HASH &kp JP_DLLR  &kp JP_PRCNT              &kp JP_YEN   &kp JP_GRAVE  &kp JP_ASTRK  &kp JP_LPAR  &kp JP_RPAR  &kp JP_EQUAL
                &kp LCTRL    &kp JP_PLUS  &kp LEFT  &kp DOWN    &kp RIGHT    &kp UP                    &kp LANG1    &kp JP_LBRC   &kp JP_LBKT   &kp JP_RBKT  &kp JP_COLON &kp JP_DQT
                &kp LSHIFT   &kp JP_PIPE  &trans    &trans      &kp JP_CARET &kp JP_AMPS               &kp LANG2    &kp JP_RBRC   &kp JP_LT     &kp JP_GT    &kp JP_QMARK &kp JP_BSLH
                                                                &trans       &trans      &trans &trans &trans       &kp LS(RET)
            >;
        };
        navnum_layer {
            display-name = "Navigation/Number";
            bindings = <
                &kp CAPSLOCK &kp N1    &kp N2    &kp N3    &kp N4     &kp N5                     &kp N6    &kp N7    &kp N8   &kp N9    &kp N0   &trans
                &kp LCTRL    &kp LC(A) &kp LSHIFT &mkp MCLK &mkp LCLK &mkp RCLK                  &kp UP    &kp LEFT  &kp DOWN &kp RIGHT &kp BSPC &kp DEL
                &kp LSHIFT   &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)  &kp LC(Y)                  &kp PG_UP &kp PG_DN &kp HOME &kp END   &trans   &kp PSCRN
                                                           &trans     &trans  &mkp MB4  &mkp MB5 &trans    &trans
            >;
        };
        fcn_layer {
            display-name = "Function";
            bindings = <
                &kp F1 &trans &kp F2 &kp F3 &kp F4 &kp F5               &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
                &trans &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans  &kp F12
                &trans &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans  &trans
                                            &trans &trans &trans &trans &trans &trans
            >;
            sensor-bindings = <&mouse_scrl SCRL_UP SCRL_DOWN>;
        };
        device_layer {
            display-name = "Device";
            bindings = <
                &bootloader &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4          &bt BT_SEL 5 &bt BT_SEL 6 &trans &trans &trans &bt BT_CLR
                &trans      &trans       &trans       &trans       &trans       &trans                &trans       &trans       &trans &trans &trans &trans
                &trans      &trans       &trans       &trans       &trans       &trans                &trans       &trans       &trans &trans &trans &trans
                                                                   &trans       &trans  &trans &trans &trans       &trans
            >;
        };
        mouse_layer {
            display-name = "Mouse";
            status = "reserved";
            bindings = <
                &trans &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans
                &trans &trans &kp LSHFT &mkp MCLK &mkp LCLK &mkp RCLK   &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans
                                            &trans &trans &trans &trans &trans &trans
            >;
        };
    };
};