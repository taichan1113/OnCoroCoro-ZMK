#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <physical_layouts.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>


// layers
#define DEFAULT 0
#define SYMBOL 1
#define NAVNUM 2
#define FCN 3
#define DEVICE 4
#define MOUSE 5

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,physical-layout = &physical_layout0;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-charlieplex";
        wakeup-source;
        interrupt-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN) >;
        gpios
            = <&gpio0 2 GPIO_ACTIVE_HIGH>
            , <&gpio0 3 GPIO_ACTIVE_HIGH>
            , <&gpio0 28 GPIO_ACTIVE_HIGH>
            , <&gpio0 29 GPIO_ACTIVE_HIGH>
            , <&gpio0 4 GPIO_ACTIVE_HIGH>
            , <&gpio0 5 GPIO_ACTIVE_HIGH>
            , <&gpio1 14 GPIO_ACTIVE_HIGH>
            ;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <7>;
        columns = <7>;
        map = <
            RC(1,0) RC(2,0) RC(3,0) RC(4,0) RC(5,0) RC(6,0) RC(0,1) RC(2,1) RC(3,1) RC(4,1) RC(5,1) RC(6,1)
            RC(0,2) RC(1,2) RC(3,2) RC(4,2) RC(5,2) RC(6,2) RC(0,3) RC(1,3) RC(2,3) RC(4,3) RC(5,3) RC(6,3)
            RC(0,4) RC(1,4) RC(2,4) RC(3,4) RC(5,4) RC(6,4) RC(0,5) RC(1,5) RC(2,5) RC(3,5) RC(4,5) RC(6,5)
                             RC(0,6) RC(1,6) RC(2,6) RC(3,6) RC(4,6) RC(5,6)

        >;
    };

    physical_layout0: physical_layout_0 {
        compatible = "zmk,physical-layout";
        display-name = "Default Layout";

        transform = <&default_transform>;
        kscan = <&kscan0>;

        keys  //                     w   h    x    y     rot    rx    ry
            = <&key_physical_attrs 100 100    0    0       0     0     0>
            , <&key_physical_attrs 100 100  100    0       0     0     0>
            , <&key_physical_attrs 100 100  200    0       0     0     0>
            , <&key_physical_attrs 100 100  300    0       0     0     0>
            , <&key_physical_attrs 100 100  400    0       0     0     0>
            , <&key_physical_attrs 100 100  500    0       0     0     0>

            , <&key_physical_attrs 100 100  800    0       0     0     0>
            , <&key_physical_attrs 100 100  900    0       0     0     0>
            , <&key_physical_attrs 100 100 1000    0       0     0     0>
            , <&key_physical_attrs 100 100 1100    0       0     0     0>
            , <&key_physical_attrs 100 100 1200    0       0     0     0>
            , <&key_physical_attrs 100 100 1300    0       0     0     0>


            , <&key_physical_attrs 100 100    0  100       0     0     0>
            , <&key_physical_attrs 100 100  100  100       0     0     0>
            , <&key_physical_attrs 100 100  200  100       0     0     0>
            , <&key_physical_attrs 100 100  300  100       0     0     0>
            , <&key_physical_attrs 100 100  400  100       0     0     0>
            , <&key_physical_attrs 100 100  500  100       0     0     0>

            , <&key_physical_attrs 100 100  800  100       0     0     0>
            , <&key_physical_attrs 100 100  900  100       0     0     0>
            , <&key_physical_attrs 100 100 1000  100       0     0     0>
            , <&key_physical_attrs 100 100 1100  100       0     0     0>
            , <&key_physical_attrs 100 100 1200  100       0     0     0>
            , <&key_physical_attrs 100 100 1300  100       0     0     0>


            , <&key_physical_attrs 100 100    0  200       0     0     0>
            , <&key_physical_attrs 100 100  100  200       0     0     0>
            , <&key_physical_attrs 100 100  200  200       0     0     0>
            , <&key_physical_attrs 100 100  300  200       0     0     0>
            , <&key_physical_attrs 100 100  400  200       0     0     0>
            , <&key_physical_attrs 100 100  500  200       0     0     0>

            , <&key_physical_attrs 100 100  800  200       0     0     0>
            , <&key_physical_attrs 100 100  900  200       0     0     0>
            , <&key_physical_attrs 100 100 1000  200       0     0     0>
            , <&key_physical_attrs 100 100 1100  200       0     0     0>
            , <&key_physical_attrs 100 100 1200  200       0     0     0>
            , <&key_physical_attrs 100 100 1300  200       0     0     0>
            

            , <&key_physical_attrs 100 100  400  325       0     0     0>
            , <&key_physical_attrs 100 100  500  325       0     0     0>
            , <&key_physical_attrs 100 100  600  350       0     0     0>
            , <&key_physical_attrs 100 100  700  350       0     0     0>
            , <&key_physical_attrs 100 100  800  325       0     0     0>
            , <&key_physical_attrs 100 100  900  325       0     0     0>
            ;
    };

    position_map {
        compatible = "zmk,physical-layout-position-map";

        complete;

        layout1: layout1 {
            physical-layout = <&physical_layout0>;
            positions
                = < 0  1  2  3  4  5        6  7  8  9  10 11 >
                , < 12 13 14 15 16 17       18 19 20 21 22 23 >
                , < 24 25 26 27 28 29       30 31 32 33 34 35 >
                , <             36 37 38 39 40 41          >
                ;
        };
    };

    // encoder_left: encoder_left {
    //     compatible = "alps,ec11";
    //     a-gpios = <&gpio0 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    //     b-gpios = <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    //     steps = <96>;
    //     status = "disabled";
    // };

    encoder_right: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&gpio1 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <96>;
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        // sensors = <&encoder_left>;
        sensors = <&encoder_right>;
        // sensors = <&encoder_left &encoder_right>;
        triggers-per-rotation = <24>;
    };
};

&gpio0 {
    fastbatcharge: fast-battery-charge {
        gpio-hog;
        gpios = <13 GPIO_ACTIVE_HIGH>;
        output-low;
        line-name = "Fast Battery Charge";
    };
};

///////////////////////////////////////////////////////////////////////////////////
&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                    <NRF_PSEL(SPIM_MOSI, 1, 15)>,
                    <NRF_PSEL(SPIM_MISO, 1, 15)>;
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                    <NRF_PSEL(SPIM_MOSI, 1, 15)>,
                    <NRF_PSEL(SPIM_MISO, 1, 15)>;
            low-power-enable;
        };
    };
};

&uart0 {
    status = "disabled";
};

&xiao_serial {
    status = "disabled";
};

&spi0 {
    compatible = "nordic,nrf-spim";
    status = "disabled";
    trackball_center: trackball_center@0 {
        compatible = "pixart,pmw3610";
        status = "disabled";
        reg = <0>;
        spi-max-frequency = <2000000>;
    };
    trackball_left: trackball_left@1 {
        compatible = "pixart,pmw3610";
        status = "disabled";
        reg = <1>;
        spi-max-frequency = <2000000>;
    };
    // trackball_right: trackball_right@1 {
    //     compatible = "pixart,pmw3610";
    //     status = "disabled";
    //     reg = <1>;
    //     spi-max-frequency = <2000000>;
    // };
};

&spi0 {
    status = "okay";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    // cs-gpios = <&gpio1 11 GPIO_ACTIVE_LOW>; // center trackball
    // cs-gpios = <&gpio1 11 GPIO_ACTIVE_LOW>, <&gpio1 12 GPIO_ACTIVE_LOW>; // center+right trackball
    cs-gpios = <&gpio1 11 GPIO_ACTIVE_LOW>, <&gpio0 16 GPIO_ACTIVE_LOW>; // center+left trackball
};

&trackball_center { // center trackball
    status = "okay";
    irq-gpios = <&gpio0 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    cpi = <800>;
    evt-type = <INPUT_EV_REL>;
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;

    force-awake;
};

// &trackball_right { // right trackball
//     status = "okay";
//     irq-gpios = <&gpio1 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
//     cpi = <800>;
//     evt-type = <INPUT_EV_REL>;
//     x-input-code = <INPUT_REL_X>;
//     y-input-code = <INPUT_REL_Y>;
// };

&encoder_right {
    status = "okay";
};

&trackball_left { // left trackball
    status = "okay";
    irq-gpios = <&gpio1 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    cpi = <800>;
    evt-type = <INPUT_EV_REL>;
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;

    // force-awake;
};

// &encoder_left {
//     status = "disabled";
// };


/ {
  trackball_listener: trackball_listner {
    compatible = "zmk,input-listener";
    device = <&trackball_center>;
    // input-processors = <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT)>, <&zip_temp_layer MOUSE 1000>; // auto mouse layer
    input-processors = <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT)>;

    scroll {
        layers = <SYMBOL>;
        input-processors = <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT)>,<&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_scaler 1 10>, <&zip_xy_to_scroll_mapper>;
        process-next;
    };

  };
  trackball_listener2: trackball_listner2 {
    compatible = "zmk,input-listener";
    device = <&trackball_left>;
    // device = <&trackball_right>;

    scroll {
        layers = <DEFAULT>;
        input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT)>, <&zip_xy_scaler 1 20>, <&zip_xy_to_scroll_mapper>;
        process-next;
    };
  };
}; 
